@model Recommended_System.Models.Shop_adder


<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyAeyUzivp1tuMpDp_6cnVXb8DWVb1i9rJQ"></script>
<script type="text/javascript">
    var geocoder = new google.maps.Geocoder();
    var Lat, Lng, Add_Str;

    function geocodePosition(pos) {
        geocoder.geocode({
            latLng: pos
        }, function (responses) {
            if (responses && responses.length > 0) {
                updateMarkerAddress(responses[0].formatted_address);
            } else {
                updateMarkerAddress('Cannot determine address at this location.');
            }
        });
    }

    function updateMarkerStatus(str) {
        document.getElementById('markerStatus').innerHTML = str;
    }

    function updateMarkerPosition(latLng) {

        Lat = latLng.lat();
        Lng = latLng.lng();
        document.getElementById('info').innerHTML = [
          latLng.lat(),
          latLng.lng()
        ].join(', ');
    }

    function updateMarkerAddress(str) {
        Add_Str = str;
        document.getElementById('address').innerHTML = str;
    }

    function initialize() {
        @*//var latLng = new google.maps.LatLng(Integer.parseInt(@Model.first), Integer.parseInt(@Model.secound));*@
        //Integer.parseInt(LONString)
        /*var points=record[i].geo_location.split(',');
    marker = new google.maps.Marker({
                 position: new google.maps.LatLng(points[0],points[1]),*/
        var points = @Model.first 
        var point2= @Model.secound
        var latLng = new google.maps.LatLng(points, point2) 
     //   var latLng = new google.maps.LatLng(10.761697, 106.697521);
        var map = new google.maps.Map(document.getElementById('mapCanvas'), {
            zoom: 8,
            center: latLng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
        var marker = new google.maps.Marker({
            position: latLng,
            title: 'Point A',
            map: map,
            //draggable: true
        });

        // Update current position info.
        updateMarkerPosition(latLng);
        geocodePosition(latLng);

        // Add dragging event listeners.
        google.maps.event.addListener(marker, 'dragstart', function () {
            updateMarkerAddress('Dragging...');
        });

        google.maps.event.addListener(marker, 'drag', function () {
            updateMarkerStatus('Dragging...');
            updateMarkerPosition(marker.getPosition());
        });

        google.maps.event.addListener(marker, 'dragend', function () {
            updateMarkerStatus('Drag ended');
            geocodePosition(marker.getPosition());
        });
    }

    function SavePostion() {
        var address = [Lat, Lng, Add_Str];
        var lstt = new Array();
        lstt = address;
        console.log(address);
        console.log("---------------");
        console.log(Lat);
        console.log(Lng);
        console.log(Add_Str);
        /// Ajax Send Value
        $.ajax({
            type: "GET",
            traditional: true,
            data: { shopmap: lstt },  /// Ex.  data: { itmsCmprLst: lstt  },
            url: "/Shop/mapping", /// Ex. url: "/Item/itmsCmprNameLstSet",
            dataType: "json",
            success: console.log("Arrived"),
            error: console.log("no")
        });
    }
    //--------------

    //var Lat = latLng.lat() , Lng = latLng.lng()  , Add_Str = str ;

    //--------------
    // Onload handler to fire off the app.
    google.maps.event.addDomListener(window, 'load', initialize);
</script>
<style>
    #mapCanvas {
        max-width: 900px;
        width:100%;
        height:100%;
        min-height: 600px;
        float: none;
    }

    #infoPanel {
        float: left;
        margin-left: 10px;
    }

        #infoPanel div {
            margin-bottom: 5px;
        }
</style>
@{
    ViewBag.Title = "detmap";
}
<h2><span class="label alert-info "> @Model.shop_name Location </span></h2>
<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <table class="table-striped table-bordered table tbl" >
        <tr>
            <td>
                <div id="mapCanvas" class="img-thumbnail"></div>

            </td>
        </tr>
        <tr>
            <td>
                <div id="infoPanel" class="Info_panel_Map">
                    <b>Current position:</b>
                    <div id="info"></div>
                    <b>Closest matching address:</b>
                    <div id="address"></div>
                </div>
                <footer>
                    <div class="Action centrLbl">
                        <button onclick="SavePostion()" class="btn-primary btn"> Save My New Postion</button>
                    </div>
                </footer>
            </td>
        </tr>
    </table>
    <span class="well well-sm">
        @Html.ActionLink("End", "Index")
    </span>
}